# This is a basic workflow to help you get started with Actions

name: CI

env:
  AWS_REGION: ap-south-1  
  ECR_REPOSITORY: 123456789012.dkr.ecr.ap-south-1.amazonaws.com/zenia
  ECS_CLUSTER: ecs-cluster  #
  ECS_SERVICE: microservice-service  

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy:
    name: Build, Push & Deploy
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # âœ… Required for OIDC authentication
      contents: read

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::148761667975:role/Github-Deployer
          aws-region: ${{ env.AWS_REGION }}

      - name: Check AWS Identity
        run: aws sts get-caller-identity


      - name: Login to Amazon ECR
        id: login-ecr
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | \
          docker login --username AWS --password-stdin ${{ env.ECR_REPOSITORY }}

      - name: Build Docker Image
        run: |
          docker build -t nodeapp:latest .
          docker tag nodeapp:latest ${{ env.ECR_REPOSITORY }}:nodeapp

      - name: Push Image to ECR
        run: |
          docker push ${{ env.ECR_REPOSITORY }}:nodeapp

      - name: Deploy Latest Tag
        run: |
          aws ecs update-service \
            --cluster $ECS_CLUSTER \
            --service $ECS_SERVICE \
            --force-new-deployment
